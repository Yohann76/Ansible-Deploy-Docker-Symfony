---
- name: Server Install
  hosts: all
  remote_user: root
  become: yes
  become_method: sudo

  vars_files:
    #- ./vars/vault.yml
    - ./vars/vars.yml

  environment:
    SYMFONY_ENV: "prod"
    #SYMFONY_ENV: "{{ symfony_env|lower }}"

  tasks:
    - ping: ~

    - name: Create project directory and set its permissions
      become: true
      file:
        path: "{{ symfony_root_dir }}"
        state: directory
        recurse: yes

    - name: Install Git VCS
      become: true
      apt:
        name: git
        state: latest
 
    - name: Git clone ( for public repo ) 
      git:
        repo: https://github.com/Yohann76/Ansible-Deploy-Docker-Symfony
        dest: "{{ symfony_root_dir }}"
        force: yes
        clone: yes

    - name: Fix var directory permissions
      become: true
      file:
        path: "{{ symfony_var_dir }}"
        state: directory
        mode: 0777
        recurse: yes
    
    - name: Fix bin/console permissions
      become: true
      file:
        path: "{{ symfony_console_path }}"
        mode: 0777

    ###### DOCKER ######

    - name: Install pip
      apt: name=python-pip state=present
      
    - name: install docker-py
      pip: name=docker-py
  
    - name: build docker
      command: '{{ symfony_console_path }} docker-compose build'

    #- name: Build Docker image from Dockerfile
      #docker_image:
        #name: web
        #path: docker
        #state: build
    
    #- name: Running the container
      #docker_container:
        #image: web:latest
        #path: docker
        #state: running
        
    #- name: Check if container is running
      #shell: docker ps

    ###### END DOCKER ######


    ###### COMPOSER ######

    - name: apt-get install composer
      become: true
      apt:
        name: composer
        state: latest

    - name: Fix var directory permissionss
      file:
        path: "{{ symfony_var_dir }}"
        state: directory
        mode: 0777
        recurse: yes


    # Symfony console commands
    #- name: Create DB if not exists
      #command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists --no-interaction'

    #- name: make migration
      #command: '{{ symfony_console_path }} make:migration'

    #- name: Execute migrations
      #command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'

    #- name: doctrine:schema:update
      #command: '{{ symfony_console_path }} doctrine:schema:update --force --no-interaction'

    #- name: Load data fixtures
      #command: '{{ symfony_console_path }} doctrine:fixtures:load --no-interaction'
      #when: symfony_env != "prod"

...